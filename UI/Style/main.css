/* Variables */
:root{
  --light: #6087FF;
  --primary: #dddddd;
  --shadow: 0 1px 5px rgba(104, 104, 104, 0.8);
}

/* Page Setup */
html{
 box-shadow: border-box;
 font-family: Arial, Helvetica, sans-serif;
 background: var(--primary);
 overflow-x: hidden
}

body {
  margin: 0;
  padding: 0;
}

.container{
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 20px;
  width: 100%;
  margin: auto;
}


.main-nav{
  width: 100%;
  display: grid;
  grid-gap: 1.6rem;
  grid-template-columns: 1fr 1fr;
}

.logo{
  color: var(--light);
  text-align: center;
  justify-self: center;
}

.nav-item{
  width: 90%;
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  list-style: none;
  margin: auto;
}

.nav-item a{
  text-decoration: none;
  color: white;
}
.nav-item a:hover,
.nav-item .current{
  color: var(--light);
  font-weight: bolder;
}

.showcase{
  background: url("../img/showPics.jpeg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: bottom;
  width: 100%;
  min-height: 300px;
  position: relative;
}

.btn {
  text-decoration: none;
  color: var(--light);
}

.form-btn{
 text-decoration: none;
 color: white;
 background: var(--light);
 font-size: 1.3em;
 padding: 0.5rem;
 display: block;
 margin: 2em auto;
 border: none;
 box-shadow: var(--shadow);
 min-width: 50%;
}

.form-btn:hover{
  opacity: 0.9;
  cursor: pointer;
}

/* InfoGraph */

.showcase .info {
  color: white;
  text-shadow: var(--shadow);
}
.showcase .info{
  max-width: 80%;
  margin: auto;
  padding-top: 3.9rem;
  padding-left: 5rem;
}

.wrapper {
  max-width: 90%;
  margin: 1.3rem auto;
}

.form-wrapper{
  width: 60%;
  margin: 1.5rem auto;
  min-height: calc(70.7vh);
}

.wrapper .infograph{
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 1.3rem;
}

.wrapper .infograph .info-box{
  background: var(--primary);
  padding: 1.4rem;
  text-align: justify;
  box-shadow: var(--shadow);
}

/* Footer */
.footer{
  background: var(--light);
  width: 100%;
  color: white;
  text-align: center;
  padding-top: 1.3rem;
  font-size: 1rem;
  min-height: 30px;
  margin-top: 25px;
  position: relative;
  bottom: 0;
}

/* Sign Up & Sign in */

form{
  margin: 2em 0;
}

/* Make field a flex-container and reverse the order. */
.field {
  display: flex;
  flex-flow: column-reverse;
  margin-bottom: 1em;
}

/* Add transition to the labeland input */
label, input {
  transition: all 0.3s;
  touch-action: manipulation;
}


input {
  font-size: 1.5em;
  border: 0;
  border-bottom: 1px dotted;
  font-family: inherit;
  -webkit-appearance: none;
  border-radius: 0;
  padding: 0 0 0 10px;
  cursor: text;
  background: var(--primary);
}

input:focus{
  outline: 0;
  border-bottom: 1px solid #666;
}

label {
  text-transform: uppercase;
  color: rgba(104, 104, 104, 0.9);
  letter-spacing: 0.05em;
  padding: 0 0 0 10px;
}

/* 
* Translate down and scale the label to cover placeholder 
* Field-to make sure it scales properly and doesnt wrap 
*/
input:placeholder-shown + label{
  cursor: text;
  max-width: 66.66%;
  white-space: nowrap;
  overflow: hidden;
  /* text-overflow: ellipsis; */
  transform-origin: left bottom;
  transform: translate(0, 2.125rem) scale(1.5);
}

/* Ensure placeholder is transparent and inherit transition */
::-webkit-input-placeholder {
  opacity: 0;
  transition: inherit;
}

/* Show placeholder when input is focused */
input:focus::-webkit-input-placeholder{
  opacity: 1;
}

/* 
* Remove label transform 
* When element is focused
*Also When there is an input
*/
input:not(:placeholder-shown) + label,
input:focus + label {
  transform: translate(0, 0) scale(1);
  cursor: pointer;
}

input:focus + label {
  color: var(--light);
}

/* Media Queries */
@media (max-width: 500px){
  .main-nav{
    grid-template-columns: 1fr;
  }

  .form-wrapper{
    width: 90%;
    min-height: calc(64.1vh);
  }
}

